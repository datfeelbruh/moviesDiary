plugins {
	id 'java'
	id 'checkstyle'
	id 'application'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.github.ben-manes.versions' version '0.38.0'
	id 'org.liquibase.gradle' version '2.2.0'
	id 'org.springdoc.openapi-gradle-plugin' version '1.3.3'
	id 'com.github.johnrengelman.processes' version '0.5.0'
}


compileJava {
	options.encoding = "UTF-8"
}

test {
	systemProperty "file.encoding", "utf-8"
}

compileTestJava {
	options.encoding = "UTF-8"
}

group = 'sobad.code'
version = '1.0'

application {
	mainClass = "sobad.code.movies_diary.MoviesDiaryApplication"
}

jar {
	manifest {
		attributes["Main-class"] = "sobad.code.movies_diary.MoviesDiaryApplication"
	}
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation (
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-actuator',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-security',
			'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0',
			'org.liquibase:liquibase-core',
			'com.querydsl:querydsl-jpa:5.0.0:jakarta',
			'io.jsonwebtoken:jjwt-api:0.11.5',
			'io.jsonwebtoken:jjwt-jackson:0.11.5',
			'io.jsonwebtoken:jjwt-impl:0.11.5',
			'com.blazebit:blaze-persistence-integration-querydsl-expressions-jakarta:1.6.9',
			'com.blazebit:blaze-persistence-core-api-jakarta:1.6.9',
			'com.blazebit:blaze-persistence-core-impl-jakarta:1.6.9',
			'com.blazebit:blaze-persistence-integration-hibernate-6.2:1.6.9'
	)
	compileOnly (
			'org.projectlombok:lombok'
	)
	developmentOnly (
			'org.springframework.boot:spring-boot-devtools'
	)
	runtimeOnly (
			'org.postgresql:postgresql',
			'com.h2database:h2'
	)
	annotationProcessor (
			'org.projectlombok:lombok',
			'com.querydsl:querydsl-apt:5.0.0:jakarta',
			'jakarta.persistence:jakarta.persistence-api:3.1.0'
	)

	testAnnotationProcessor (
			'org.projectlombok:lombok'
	)

	testImplementation (
			'org.springframework.boot:spring-boot-testcontainers',
			'org.springframework.boot:spring-boot-starter-test',
			'org.springframework.security:spring-security-test',
			'org.springframework.boot:spring-boot-starter-security',
			'org.testcontainers:testcontainers:1.18.3',
			'org.testcontainers:postgresql:1.18.3',
			'org.testcontainers:junit-jupiter:1.16.2',
			'org.projectlombok:lombok'
	)
	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core',
			'info.picocli:picocli:4.7.1',
			'org.liquibase.ext:liquibase-hibernate6:4.21.1',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'com.h2database:h2',
	)
}

liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/changelog-master.yaml'
			url 'jdbc:h2:./test'
			referenceUrl 'hibernate:spring:movies_diary.entities' +
					'?dialect=org.hibernate.dialect.H2Dialect' +
					'&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy'
		}
	}
}

checkstyle {
	toolVersion "10.0"
}

diffChangelog {
	dependsOn compileJava
}

tasks.named('test') {
	useJUnitPlatform()
}
